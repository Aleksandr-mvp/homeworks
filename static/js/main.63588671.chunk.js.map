{"version":3,"sources":["p2-homeworks/h5/pages/UniversalStyles.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Rout.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message","ava","src","avatar","alt","content","name","text","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onKeyPressHandler","error","totalUsers","inputClass","s","someClass","value","onChange","onKeyPress","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","key","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","PreJunior","PreContainer","Error404","Junior","JuniorPlus","PATH","Rout","path","element","replace","to","Header","headWrapper","item","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.63588671.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PreContainer\":\"UniversalStyles_PreContainer__1wCJ6\",\"item\":\"UniversalStyles_item__xHxuu\",\"active\":\"UniversalStyles_active__h7E7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__18ZAm\",\"ava\":\"Message_ava__1PXR9\",\"content\":\"Message_content__2IWC7\",\"time\":\"Message_time__3_xAd\",\"name\":\"Message_name__B22R9\",\"text\":\"Message_text__2my-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1sDAL\",\"superInput\":\"SuperInputText_superInput__2xXij\",\"errorInput\":\"SuperInputText_errorInput__6LF4t\",\"error\":\"SuperInputText_error__3rJN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3kFQW\",\"blink\":\"SuperButton_blink__3qfg_\",\"default\":\"SuperButton_default__1Z0x0\",\"red\":\"SuperButton_red__y7AJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__hI5tY\",\"error\":\"Greeting_error__16Td4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3Ezpy\",\"column\":\"HW4_column__1bVF2\",\"testSpanError\":\"HW4_testSpanError__1dAgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1Au69\",\"spanClassName\":\"SuperCheckbox_spanClassName__3m08h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1umn4\"};","import React from 'react'\r\nimport styles from './Message.module.css'\r\n\r\ntype propsType = {\r\n    avatar?: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: propsType) {\r\n    return (\r\n        <div className={styles.message}>\r\n            <div className={styles.ava}>\r\n                <img src={props.avatar} alt=\"ava\"/>\r\n            </div>\r\n            <div className={styles.content}>\r\n                <div className={styles.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={styles.text}>\r\n                    {props.message} <span className={styles.time}>{props.time}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://cdn1.ozone.ru/s3/multimedia-y/6045529018.jpg',\r\n    name: '悠真',\r\n    message: 'Now I will go to the store for dumplings :)',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {TaskType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: TaskType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={deleteCallback}>X</button>\r\n\r\n            {props.affair.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType, TaskType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType\r\n    setFilter: (value: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: TaskType) => (\r\n        <Affair\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all')\r\n    const setHigh = () => props.setFilter('low')\r\n    const setMiddle = () => props.setFilter('high')\r\n    const setLow = () => props.setFilter('middle')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type TaskType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\n\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = Array<TaskType>\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n\r\n// constants\r\nconst defaultAffairs: AffairType = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType, filter: FilterType): AffairType => {\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else if (filter === 'high') {\r\n        return affairs.filter(f => f.priority === 'high')\r\n    } else if (filter === 'low') {\r\n        return affairs.filter(f => f.priority === 'low')\r\n    } else if (filter === 'middle') {\r\n        return affairs.filter(f => f.priority === 'middle')\r\n    } else {\r\n        return affairs\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: AffairType, _id: number): AffairType => {\r\n    return affairs.filter(f => f._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<TaskType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser,onKeyPressHandler, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = name === '' ? s.error : s.someClass // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} onKeyPress={onKeyPressHandler} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent,KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>// need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n    const addUser = () => {\r\n        if ( name.trim() !== '') {\r\n            setName('')\r\n            addUserCallback(name)\r\n            setError('')\r\n            alert(`Hello ${name} !`) // need to fix\r\n        } else {\r\n            setError('Введите коректное имя')\r\n\r\n        }\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            addUserCallback(name)\r\n            setName('')\r\n            alert(`Hello ${name} !`)\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length  // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState <Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser = { _id: v1(), name: name}\r\n        setUsers([newUser, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${s.error ? s.errorInput : s.superInput} ${className}`// need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)// сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './UniversalStyles.module.css'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div className={s.PreContainer}>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n            {/*<HW6/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Routes, Route, Navigate} from \"react-router-dom\"\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n    // add paths\r\n}\r\n\r\nfunction Rout() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n\r\n                в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\r\n                exact нужен чтоб указать полное совподение (что после '/' ничего не будет)\r\n                <Route path={'/'} element={<Navigate replace to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                // add routes\r\n\r\n                у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n                <Route element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rout\r\n","import React from 'react'\r\nimport s from './pages/UniversalStyles.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"./Rout\";\r\n\r\ntype ActiveStyleType = {\r\n    textDecoration: string\r\n    color: string\r\n    fontSize: number | string\r\n}\r\n\r\nfunction Header() {\r\n\r\n    let activeStyle: ActiveStyleType = {\r\n        textDecoration: \"none\",\r\n        color: \"orange\",\r\n        fontSize: 20 + 'px'\r\n    }\r\n\r\n    return (\r\n        <div className={s.headWrapper}>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PRE_JUNIOR}>PreJunior</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.JUNIOR}>Junior</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.JUNIOR_PLUS}>JuniorPlus</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Rout from './Rout'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header/>\r\n                <Rout/>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div><h3>react homeworks:</h3></div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}